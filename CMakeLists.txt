cmake_minimum_required(VERSION 3.20)

set(MODULE_NAME osdialog)

project(${MODULE_NAME} LANGUAGES CXX)

set(OSDIALOG_PLATFORM_OVERRIDE "" CACHE STRING "Platform for osdialog: windows, gtk, mac, zenity")

if (EXISTS ${OSDIALOG_PLATFORM_OVERRIDE})
	set(OSDIALOG_PLATFORM ${OSDIALOG_PLATFORM_OVERRIDE})
else()
	if(${CMAKE_CXX_COMPILER_ID} STREQUAL MSVC)
		set(OSDIALOG_PLATFORM windows)
	elseif(${CMAKE_CXX_COMPILER_ID} STREQUAL Clang)
		if(${CMAKE_CXX_SIMULATE_ID} STREQUAL MSVC)
			set(OSDIALOG_PLATFORM windows)
		else()
			set(OSDIALOG_PLATFORM gtk)
		endif()
	elseif(${CMAKE_CXX_COMPILER_ID} STREQUAL GNU)
		set(OSDIALOG_PLATFORM gtk)
	endif()
endif()

if (${OSDIALOG_PLATFORM} STREQUAL windows)
	add_library(${MODULE_NAME} osdialog.h osdialog.c osdialog_win.h osdialog_win.c)
elseif (${OSDIALOG_PLATFORM} STREQUAL mac)
	add_library(${MODULE_NAME} osdialog.h osdialog.c osdialog_mac.G)
elseif (${OSDIALOG_PLATFORM} STREQUAL gtk)
	add_library(${MODULE_NAME} osdialog.h osdialog.c osdialog_gtk3.c)
elseif (${OSDIALOG_PLATFORM} STREQUAL zenity)
	add_library(${MODULE_NAME} osdialog.h osdialog.c osdialog_zenity.c)
else()
	if (${OSDIALOG_PLATFORM})
		message(FATAL_ERROR "osdialog platform ${OSDIALOG_PLATFORM} not supported or mispelled")
	else()
		message(FATAL_ERROR "specify platform for osdialog through OSDIALOG_PLATFORM_OVERRIDE")
	endif()
endif()

target_include_directories(${MODULE_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
